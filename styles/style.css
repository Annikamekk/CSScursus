@font-face {
    font-family: 'PixelGame';
    src: url('/pixel-game/PixelGame.otf') format('opentype');
}

:root {

    color-scheme: light dark;

    --red:light-dark( rgb(247, 72, 72), rgb(154, 36, 36));
    --orange: light-dark(rgb(241, 181, 68),rgb(184, 129, 0) );
    --yellow:light-dark( rgb(255, 255, 95), rgb(236, 187, 7));
    --green:light-dark( rgb(18, 168, 80),rgb(9, 97, 9));
    --blue: light-dark(rgb(0, 110, 255),rgb(37, 91, 161) );
    --purple:light-dark( rgb(155, 27, 118), rgb(91, 16, 91));
    --pink:light-dark( rgb(235, 121, 193),rgb(180, 9, 100));
   --black: rgb(20, 19, 19);
   --white:light-dark(white, hsl(0, 0%, 80%));
   --grey:light-dark( hsl(0, 0%, 93%), hsl(0, 0%, 30%));
    --brown:light-dark(rgb(165, 93, 42), rgb(103, 59, 27));
    --schilder:light-dark(rgb(176, 124, 12),rgb(155, 121, 40) );

   --radius:41% 68% 46% 80% / 68% 48% 70% 63%;   
   --box-shadow:5px 5px 10px;
   ---box-color:light-dark(rgba(0, 0, 0, 0.2), rgba(69, 69, 69, 0.6));
}


body {
    font-family: 'PixelGame';
    box-sizing: border-box;
    margin: 1em;
    height: 100vh;
    cursor: url("/img/kwast.png") 1 1, pointer;
    background-color: var(--grey);
}

header > h1{
    font-size: 3em;
    text-align: center;
    margin-top: 0;

}
main{
    display: flex;
    flex-direction: row-reverse;
    justify-content: space-around;
    align-items: center;
}


div:nth-of-type(1){
    display: flex;
    flex-direction:column;
    gap: 1em;
}

div:nth-of-type(1) section{
    display: flex;
    flex-direction: column;
    place-content: end;
    align-items: center;
    column-gap: .5em;
    cursor: url(/img/eraser.png) 15 100, pointer;

    > div{
        background-color:rgb(133, 106, 58);
        border: .4em solid rgb(107, 84, 44);
        place-content: center;
        padding: .5em;
        box-shadow: inset 0.1em .3em 10px rgb(174, 147, 101) ;
    }


    > h2{
        margin: 0;
    }
 }



 main > div:nth-of-type(1) > div {
    display: grid;
    grid-template-columns: 50% 50%;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    background-color:var(--white);
    box-shadow:var(--box-shadow) var(---box-color);
    border-radius: .1em;
    width: max-content;
    gap: .5em;
    padding: 1em;
}

/* input[type="range"]{
    aspect-ratio: 1;
    -webkit-appearance: none;
    appearance: none;
    transition: .3s;
    width: 100%; 
    height: 1em; 
    background-color: var(--white);
    box-shadow: inset var(--box-shadow);
    color: var(--black);
    border-radius: 1em;
}

input[type="range"]::-webkit-slider-thumb{
    background-color:var(--green);
    cursor: pointer;
}
 */
input[type="radio"] {
    height: 5em;
    width: 5em;
    border-radius: var(--radius);
    border: none;
    box-shadow: inset var(--box-shadow) var(---box-color);  
    -webkit-appearance: none;
    appearance: none;
    cursor: url("/img/kwast.png") 15 100, pointer;
}

input[type="radio"]:focus{
    border: var(--black);
}

input[value="white"]{
    background-color: var(--white);
    border-radius: 1em;
    box-shadow: var(--box-shadow) var(---box-color);
    height: 3em;
    border: .1em;
    cursor: pointer;
}

input[value="black"]{
    background-color: var(--black);
   
}

input[value="red"] {
    background-color: var(--red);
}

input[value="orange"] {
    background-color: var(--orange);
    /* transform: translate(5.5em, -.5em); */
}

input[value="yellow"] {
    background-color: var(--yellow);
    /* transform: translate(10em, 0); */
}

input[value="green"] {
    background-color: var(--green);
    /* transform: translate(12em, 1em); */
}

input[value="blue"] {
    background-color: var(--blue);
    /* transform: translate(10em, 1.5em); */
}

input[value="purple"]{
    background-color: var(--purple);
    /* transform: translate(5em, .5em); */
}

input[value="pink"] {
    background-color: var(--pink);
    /* transform: translate(-1em, -1em); */
}
input[value="brown"] {
    background-color: var(--brown);
    /* transform: translate(-1em, -1em); */
}
input[value="grey"] {
    background-color: var(--grey);
    /* transform: translate(-1em, -1em); */
}

main>div:nth-of-type(2) {
    display: grid;
    grid-template-columns: repeat(70, .7em);
    place-content: center;
    background-color: var(--white);
    border: 1.5em var(--schilder);
    border-style: groove;
    /* width: 50%;
    height: auto; */
    margin: 1em;
    /* mask: radial-gradient(20px at 10vh 10vh, transparent 98%, black) -10vh -10vh; */
    
}

 
div:nth-of-type(2)>div {
    aspect-ratio: 1;
    border: 0 solid black;
    transition: background-color 10000000s;
}

div:nth-of-type(2)>div:hover {
    /* background-color: var(--purple); */
    transition: background-color .08s ease;
}



body:has( input[value="white"]:checked) div:nth-of-type(2)> div:hover {
    background-color: var(--white);
    transition: background-color .01s ease;
    cursor: url("/img/eraser.png") 15 100, pointer;
}

body:has(div:nth-of-type(1) input[value="red"]:checked) div:nth-of-type(2)>div:hover {
    background-color: var(--red);
}

body:has(div:nth-of-type(1) input[value="orange"]:checked) div:nth-of-type(2)>div:hover {
    background-color: var(--orange);
}

body:has(div:nth-of-type(1) input[value="yellow"]:checked) div:nth-of-type(2)>div:hover {
    background-color: var(--yellow);
}

body:has(div:nth-of-type(1) input[value="green"]:checked) div:nth-of-type(2)>div:hover {
    background-color: var(--green);
}

body:has(div:nth-of-type(1) input[value="blue"]:checked) div:nth-of-type(2)>div:hover {
    background-color: var(--blue);
}

body:has(div:nth-of-type(1) input[value="purple"]:checked) div:nth-of-type(2)>div:hover {
    background-color: var(--purple);
}

body:has(div:nth-of-type(1) input[value="pink"]:checked) div:nth-of-type(2)>div:hover {
    background-color: var(--pink);
}

body:has(div:nth-of-type(1) input[value="black"]:checked) div:nth-of-type(2)>div:hover {
    background-color: var(--black);
}
body:has(div:nth-of-type(1) input[value="brown"]:checked) div:nth-of-type(2)>div:hover {
    background-color: var(--brown);
}

body:has(div:nth-of-type(1) input[value="grey"]:checked) div:nth-of-type(2)>div:hover {
    background-color: var(--grey);
}


/* input[type="range"]:has([max="100"]) div:nth-of-type(2)>div:hover + div { 
    background-color: pink;
} */

input[type="range"]:has([max="100"]) 
    input[value=""]:checked
div:nth-of-type(2) > div:hover + div {
    background-color: pink;
}